{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from \"contentlayer/source-files\";\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\";\nimport rehypePrettyCode from \"rehype-pretty-code\";\nimport rehypeSlug from \"rehype-slug\";\nimport remarkGfm from \"remark-gfm\";\n\n/** @type {import('contentlayer/source-files').ComputedFields} */\nconst computedFields = {\n    slug: {\n        type: \"string\",\n        resolve: (doc) => `/${doc._raw.flattenedPath}`,\n    },\n    slugAsParams: {\n        type: \"string\",\n        resolve: (doc) => doc._raw.flattenedPath.split(\"/\").slice(1).join(\"/\"),\n    },\n};\n\n// Doc Type for Notes\nexport const Note = defineDocumentType(() => ({\n    name: \"Note\",\n    filePathPattern: `notes/**/*.mdx`,\n    contentType: \"mdx\",\n    fields: {\n        title: {\n            type: \"string\",\n            required: true,\n        },\n        //   description: {\n        //     type: \"string\",\n        //   },\n        //   published: {\n        //     type: \"boolean\",\n        //     default: true,\n        //   },\n    },\n    computedFields,\n}));\n\nexport const Project = defineDocumentType(() => ({\n    name: \"Project\",\n    filePathPattern: `projects/**/*.mdx`,\n    contentType: \"mdx\",\n    fields: {\n        title: {\n            type: \"string\",\n            required: true,\n        },\n        //   description: {\n        //     type: \"string\",\n        //   },\n        //   published: {\n        //     type: \"boolean\",\n        //     default: true,\n        //   },\n    },\n    computedFields,\n}));\n\nexport default makeSource({\n    contentDirPath: \"./content\",\n    documentTypes: [Note, Project],\n    mdx: {\n        remarkPlugins: [remarkGfm],\n        rehypePlugins: [\n            rehypeSlug,\n            [\n                rehypePrettyCode,\n                {\n                    theme: \"github-dark\",\n                    onVisitLine(node) {\n                        // Prevent lines from collapsing in `display: grid` mode, and allow empty\n                        // lines to be copy/pasted\n                        if (node.children.length === 0) {\n                            node.children = [{ type: \"text\", value: \" \" }];\n                        }\n                    },\n                    onVisitHighlightedLine(node) {\n                        node.properties.className.push(\"line--highlighted\");\n                    },\n                    onVisitHighlightedWord(node) {\n                        node.properties.className = [\"word--highlighted\"];\n                    },\n                },\n            ],\n            [\n                rehypeAutolinkHeadings,\n                {\n                    properties: {\n                        className: [\"subheading-anchor\"],\n                        ariaLabel: \"Link to section\",\n                    },\n                },\n            ],\n        ],\n    },\n});\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,4BAA4B;AACnC,OAAO,sBAAsB;AAC7B,OAAO,gBAAgB;AACvB,OAAO,eAAe;AAGtB,IAAM,iBAAiB;AAAA,EACnB,MAAM;AAAA,IACF,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,IAAI,KAAK;AAAA,EACnC;AAAA,EACA,cAAc;AAAA,IACV,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG;AAAA,EACzE;AACJ;AAGO,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC1C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACJ,OAAO;AAAA,MACH,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQJ;AAAA,EACA;AACJ,EAAE;AAEK,IAAM,UAAU,mBAAmB,OAAO;AAAA,EAC7C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACJ,OAAO;AAAA,MACH,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQJ;AAAA,EACA;AACJ,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACtB,gBAAgB;AAAA,EAChB,eAAe,CAAC,MAAM,OAAO;AAAA,EAC7B,KAAK;AAAA,IACD,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe;AAAA,MACX;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,UACI,OAAO;AAAA,UACP,YAAY,MAAM;AAGd,gBAAI,KAAK,SAAS,WAAW,GAAG;AAC5B,mBAAK,WAAW,CAAC,EAAE,MAAM,QAAQ,OAAO,IAAI,CAAC;AAAA,YACjD;AAAA,UACJ;AAAA,UACA,uBAAuB,MAAM;AACzB,iBAAK,WAAW,UAAU,KAAK,mBAAmB;AAAA,UACtD;AAAA,UACA,uBAAuB,MAAM;AACzB,iBAAK,WAAW,YAAY,CAAC,mBAAmB;AAAA,UACpD;AAAA,QACJ;AAAA,MACJ;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,UACI,YAAY;AAAA,YACR,WAAW,CAAC,mBAAmB;AAAA,YAC/B,WAAW;AAAA,UACf;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACJ,CAAC;",
  "names": []
}
